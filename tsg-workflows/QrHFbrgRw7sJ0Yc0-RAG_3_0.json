{
  "name": "RAG 3.0",
  "nodes": [
    {
      "parameters": {
        "aggregate": "aggregateAllItemData",
        "options": {
          "disableDotNotation": true,
          "sumWithEmptyValues": true
        }
      },
      "id": "07be0f68-28ea-44dd-92ac-553a63548358",
      "name": "Aggregate1",
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        1780,
        1380
      ]
    },
    {
      "parameters": {
        "fieldsToSummarize": {
          "values": [
            {
              "aggregation": "concatenate",
              "field": "data",
              "includeEmpty": true
            }
          ]
        },
        "options": {
          "disableDotNotation": true
        }
      },
      "id": "bd9da1f4-5d08-48a3-b014-db33745ba463",
      "name": "Summarize1",
      "type": "n8n-nodes-base.summarize",
      "typeVersion": 1,
      "position": [
        1980,
        1380
      ]
    },
    {
      "parameters": {
        "operation": "pdf",
        "options": {
          "language": "eng",
          "ocr": true,
          "pages": "all"
        }
      },
      "id": "1a9d9d8e-23c0-4709-a086-4b93b622aa53",
      "name": "Extract PDF Text",
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        1580,
        1040
      ]
    },
    {
      "parameters": {
        "operation": "xlsx",
        "options": {
          "includeEmptyCells": true,
          "readAsString": true,
          "headerRow": true
        }
      },
      "id": "4a78f9fd-853b-48a2-8ab5-34cc941bcbbf",
      "name": "Extract from Excel",
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        1580,
        1380
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "10646eae-ae46-4327-a4dc-9987c2d76173",
              "name": "file_id",
              "value": "={{ $('File Updated').item.json.id }}",
              "type": "string"
            },
            {
              "id": "f4536df5-d0b1-4392-bf17-b8137fb31a44",
              "name": "file_type",
              "value": "={{ $('File Updated').item.json.mimeType }}",
              "type": "string"
            },
            {
              "id": "new-assignment-1",
              "name": "file_name",
              "value": "={{ $('File Updated').item.json.name }}",
              "type": "string"
            },
            {
              "id": "new-assignment-2",
              "name": "last_modified",
              "value": "={{ $('File Updated').item.json.modifiedTime }}",
              "type": "string"
            },
            {
              "id": "new-assignment-3",
              "name": "file_size",
              "value": "={{ $('File Updated').item.json.size }}",
              "type": "number"
            }
          ]
        },
        "options": {
          "dotNotation": false
        }
      },
      "id": "d97368c0-8433-418d-9ff0-97f1a5db3600",
      "name": "Set File ID",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        220,
        2200
      ]
    },
    {
      "parameters": {
        "operation": "delete",
        "tableId": "documents",
        "filterType": "string",
        "filterString": "=metadata->>file_id=like.*{{ $('Set File ID').item.json.file_id }}*"
      },
      "id": "afff0def-2e00-4401-ae6f-c5b7bd3d1681",
      "name": "Delete Old Doc Rows",
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        600,
        2200
      ],
      "alwaysOutputData": true,
      "credentials": {
        "supabaseApi": {
          "id": "R9pmCSMoPAm6cxGW",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "operation": "download",
        "fileId": {
          "__rl": true,
          "value": "={{ $('Set File ID').item.json.file_id }}",
          "mode": "id"
        },
        "options": {
          "googleFileConversion": {
            "conversion": {
              "docsToFormat": "text/plain"
            }
          }
        }
      },
      "id": "8cbd34e9-985e-47db-b018-126b5038680f",
      "name": "Download File",
      "type": "n8n-nodes-base.googleDrive",
      "typeVersion": 3,
      "position": [
        1540,
        2360
      ],
      "executeOnce": true,
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "yO30tw4ZXvRYlhaV",
          "name": "Google Drive account 2"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://www.googleapis.com/drive/v3/files/{{ $('Set File ID1').item.json.file_id }}/copy",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "googleDriveOAuth2Api",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "name",
              "value": "={{ $('Set File ID1').item.json.name }}"
            },
            {
              "name": "mimeType",
              "value": "application/vnd.google-apps.document"
            }
          ]
        },
        "options": {
          "timeout": 30000,
          "allowUnauthorizedCerts": false,
          "queryParametersUi": {
            "parameters": [
              {
                "name": "fields",
                "value": "id,name,mimeType,size,modifiedTime"
              }
            ]
          }
        }
      },
      "id": "a74451cd-5459-4ab0-b8e0-04b2354af8d2",
      "name": "Convert to Google Doc1",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        1580,
        1560
      ],
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "yO30tw4ZXvRYlhaV",
          "name": "Google Drive account 2"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "928b5cae-77cd-48a2-81ef-2f76dc441b0a",
              "leftValue": "={{ $('File Updated').item.json.mimeType }}",
              "rightValue": "application/vnd.google-apps.document",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            },
            {
              "id": "6368b5ad-32b0-491d-a27d-5cc3ad5c2a11",
              "leftValue": "={{ ((Date.now() - Date.parse($('File Updated').item.json.createdTime)) / 1000) }}",
              "rightValue": 60,
              "operator": {
                "type": "number",
                "operation": "lt"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {
          "retryOnFail": true,
          "retryTimes": 3,
          "retryDelay": 1000
        }
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        380,
        2200
      ],
      "id": "60041d8c-f37e-4a23-87be-c02742b3dfdd",
      "name": "If",
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "operation": "deleteFile",
        "fileId": {
          "__rl": true,
          "value": "={{ $('Set File ID1').item.json.file_id }}",
          "mode": "id"
        },
        "options": {
          "supportsAllDrives": true
        }
      },
      "type": "n8n-nodes-base.googleDrive",
      "typeVersion": 3,
      "position": [
        1780,
        1560
      ],
      "id": "dd02d004-d4ba-4e6a-8adf-0908812e3114",
      "name": "Delete File",
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "yO30tw4ZXvRYlhaV",
          "name": "Google Drive account 2"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "10646eae-ae46-4327-a4dc-9987c2d76173",
              "name": "file_id",
              "value": "={{ $('File Created').item.json.id }}",
              "type": "string"
            },
            {
              "id": "f4536df5-d0b1-4392-bf17-b8137fb31a44",
              "name": "file_type",
              "value": "={{ $('File Created').item.json.mimeType }}",
              "type": "string"
            },
            {
              "id": "new-assignment-1",
              "name": "file_name",
              "value": "={{ $('File Created').item.json.name }}",
              "type": "string"
            },
            {
              "id": "new-assignment-2",
              "name": "created_at",
              "value": "={{ $('File Created').item.json.createdTime }}",
              "type": "string"
            },
            {
              "id": "new-assignment-3",
              "name": "file_size",
              "value": "={{ $('File Created').item.json.size }}",
              "type": "number"
            }
          ]
        },
        "options": {
          "dotNotation": false
        }
      },
      "id": "50b97272-ccc4-404e-a2fb-bab05aa1106e",
      "name": "Set File ID1",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        280,
        1340
      ]
    },
    {
      "parameters": {
        "operation": "download",
        "fileId": {
          "__rl": true,
          "value": "={{ $('Set File ID1').item.json.file_id }}",
          "mode": "id"
        },
        "options": {
          "googleFileConversion": {
            "conversion": {
              "docsToFormat": "text/plain"
            }
          }
        }
      },
      "id": "2ab8eaab-3669-490b-af22-61df11803fab",
      "name": "Download File1",
      "type": "n8n-nodes-base.googleDrive",
      "typeVersion": 3,
      "position": [
        600,
        1500
      ],
      "executeOnce": true,
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "yO30tw4ZXvRYlhaV",
          "name": "Google Drive account 2"
        }
      }
    },
    {
      "parameters": {
        "aggregate": "aggregateAllItemData",
        "options": {
          "disableDotNotation": true,
          "sumWithEmptyValues": true
        }
      },
      "id": "06eea313-42b0-46fd-ac0f-b8f42ac86384",
      "name": "Aggregate",
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        2300,
        2300
      ]
    },
    {
      "parameters": {
        "fieldsToSummarize": {
          "values": [
            {
              "aggregation": "concatenate",
              "field": "data",
              "includeEmpty": true
            }
          ]
        },
        "options": {
          "disableDotNotation": true
        }
      },
      "id": "50fb8a46-4381-49d0-b079-fbf0ad7dc381",
      "name": "Summarize",
      "type": "n8n-nodes-base.summarize",
      "typeVersion": 1,
      "position": [
        2500,
        2300
      ]
    },
    {
      "parameters": {
        "operation": "pdf",
        "options": {
          "language": "eng",
          "ocr": true,
          "pages": "all"
        }
      },
      "id": "2e22a7d5-5e14-4a20-9bb3-6387cf528f2c",
      "name": "Extract PDF Text1",
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        2100,
        1960
      ]
    },
    {
      "parameters": {
        "operation": "xlsx",
        "options": {
          "includeEmptyCells": true,
          "readAsString": true,
          "headerRow": true
        }
      },
      "id": "5341aa09-e74f-4e91-88a2-e236921372df",
      "name": "Extract from Excel1",
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        2100,
        2300
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://www.googleapis.com/drive/v3/files/{{ $('Set File ID').item.json.file_id }}/copy",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "googleDriveOAuth2Api",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "name",
              "value": "={{ $('Set File ID').item.json.name }}"
            },
            {
              "name": "mimeType",
              "value": "application/vnd.google-apps.document"
            }
          ]
        },
        "options": {
          "timeout": 30000,
          "allowUnauthorizedCerts": false,
          "queryParametersUi": {
            "parameters": [
              {
                "name": "fields",
                "value": "id,name,mimeType,size,modifiedTime"
              }
            ]
          }
        }
      },
      "id": "07b93a6c-dd2b-474e-b6a1-63c1ae1b085b",
      "name": "Convert to Google Doc2",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        2100,
        2500
      ],
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "yO30tw4ZXvRYlhaV",
          "name": "Google Drive account 2"
        }
      }
    },
    {
      "parameters": {
        "operation": "deleteFile",
        "fileId": {
          "__rl": true,
          "value": "={{ $('Set File ID').item.json.file_id }}",
          "mode": "id"
        },
        "options": {
          "supportsAllDrives": true
        }
      },
      "type": "n8n-nodes-base.googleDrive",
      "typeVersion": 3,
      "position": [
        2300,
        2500
      ],
      "id": "4fe432d8-479e-48e3-92fc-40bbf84bc13c",
      "name": "Delete File1",
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "yO30tw4ZXvRYlhaV",
          "name": "Google Drive account 2"
        }
      }
    },
    {
      "parameters": {
        "chunkSize": 1500,
        "chunkOverlap": 200,
        "options": {
          "splitCode": "markdown",
          "keepSeparator": true,
          "separators": [
            "\n\n",
            "\n",
            ".",
            ";",
            ","
          ],
          "metadataMode": "preserve"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter",
      "typeVersion": 1,
      "position": [
        2440,
        1420
      ],
      "id": "945ee747-f897-4c3d-bfa6-7ad1db0ba2b5",
      "name": "Recursive Character Text Splitter"
    },
    {
      "parameters": {
        "model": "text-embedding-3-large",
        "options": {
          "dimensions": 1536,
          "encodingFormat": "float",
          "batchSize": 100,
          "stripNewLines": true
        }
      },
      "type": "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
      "typeVersion": 1.1,
      "position": [
        2200,
        1360
      ],
      "id": "0125b8f3-77d7-48bf-a6d4-da6961f4c296",
      "name": "Embeddings OpenAI1",
      "credentials": {
        "openAiApi": {
          "id": "JSPFLNImx8SGH5aT",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "chunkSize": 1500,
        "chunkOverlap": 200,
        "options": {
          "keepSeparator": true,
          "separators": [
            "\n\n",
            "\n",
            ".",
            ";",
            ","
          ],
          "metadataMode": "preserve"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter",
      "typeVersion": 1,
      "position": [
        3080,
        2420
      ],
      "id": "7b22ccbe-373e-4cc7-98c6-3c9797b9f9ed",
      "name": "Recursive Character Text Splitter1"
    },
    {
      "parameters": {
        "model": "text-embedding-3-large",
        "options": {
          "dimensions": 1536,
          "encodingFormat": "float",
          "batchSize": 100,
          "stripNewLines": true
        }
      },
      "type": "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
      "typeVersion": 1.1,
      "position": [
        2820,
        2280
      ],
      "id": "5bf4bf8e-277d-4997-952b-2268585c666b",
      "name": "Embeddings OpenAI2",
      "credentials": {
        "openAiApi": {
          "id": "JSPFLNImx8SGH5aT",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "content": "# Watch Trigger (Drive) - Files Created\n## Files created in a specific folder -> Check file type and do conversion if necessary -> Extract the text -> Add to Vector Store\nDrive/Backoffice/Backoffice_Contracts",
        "height": 740,
        "width": 2660,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        0,
        980
      ],
      "typeVersion": 1,
      "id": "4e60b1ac-0758-4006-acd5-e6bf0e2d5191",
      "name": "Sticky Note1"
    },
    {
      "parameters": {
        "content": "# Watch Trigger (Drive) - Files Updated\n## Files updated in a specific folder -> Check file type and do conversion if necessary -> Extract the text -> Add to Vector Store\nDrive/Backoffice/Backoffice_Contracts",
        "height": 888.3491772897637,
        "width": 3306.7699150920453,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        0,
        1820
      ],
      "typeVersion": 1,
      "id": "4f30ef98-72c3-4c41-88ab-4a01305099cd",
      "name": "Sticky Note3"
    },
    {
      "parameters": {
        "options": {
          "maxItems": 50,
          "batchSize": 10,
          "continueOnFail": true
        }
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        440,
        1340
      ],
      "id": "5eb31a8a-28bc-46bd-9acf-85f4656036ed",
      "name": "Loop Over Items"
    },
    {
      "parameters": {
        "jsonMode": "expressionData",
        "jsonData": "={{ $json.data || $json.text || $json.concatenated_data }}",
        "options": {
          "metadata": {
            "metadataValues": [
              {
                "name": "=file_id",
                "value": "={{ $('Set File ID1').item.json.file_id }}"
              },
              {
                "name": "=version",
                "value": "v1"
              },
              {
                "name": "=creator",
                "value": "={{ $('File Created').item.json.owners[0].displayName }}"
              },
              {
                "name": "=created_at",
                "value": "={{ $('File Created').item.json.createdTime }}"
              },
              {
                "name": "last_modified",
                "value": "={{ $('File Created').item.json.modifiedTime }}"
              },
              {
                "name": "folder_path",
                "value": "projects"
              },
              {
                "name": "file_name",
                "value": "={{ $('File Created').item.json.name }}"
              },
              {
                "name": "file_extension",
                "value": "={{ $('File Created').item.json.mimeType }}"
              },
              {
                "name": "file_size",
                "value": "={{ $('File Created').item.json.size }}"
              },
              {
                "name": "chunk_index",
                "value": "={{ $index }}"
              },
              {
                "name": "source_type",
                "value": "google_drive"
              }
            ]
          },
          "includePageContent": true,
          "includeMetadata": true
        }
      },
      "id": "42843342-98ce-4206-b511-94b084430989",
      "name": "Enhanced Default Data Loader1",
      "type": "@n8n/n8n-nodes-langchain.documentDefaultDataLoader",
      "typeVersion": 1,
      "position": [
        2360,
        1260
      ]
    },
    {
      "parameters": {
        "jsonMode": "expressionData",
        "jsonData": "={{ $json.data || $json.text || $json.concatenated_data }}",
        "options": {
          "metadata": {
            "metadataValues": [
              {
                "name": "=file_id",
                "value": "={{ $('Set File ID').item.json.file_id }}"
              },
              {
                "name": "=version",
                "value": "={{ $('Set Version').item.json.message.content.version }}"
              },
              {
                "name": "=creator",
                "value": "={{ $('File Updated').item.json.owners[0].displayName }}"
              },
              {
                "name": "=created_at",
                "value": "={{ $('File Updated').item.json.createdTime }}"
              },
              {
                "name": "=last_modified",
                "value": "={{ $('File Updated').item.json.modifiedTime }}"
              },
              {
                "name": "=folder_path",
                "value": "projects"
              },
              {
                "name": "=file_name",
                "value": "={{ $('File Updated').item.json.name }}"
              },
              {
                "name": "=file_extension",
                "value": "={{ $('File Updated').item.json.mimeType }}"
              },
              {
                "name": "file_size",
                "value": "={{ $('File Updated').item.json.size }}"
              },
              {
                "name": "chunk_index",
                "value": "={{ $index }}"
              },
              {
                "name": "source_type",
                "value": "google_drive"
              },
              {
                "name": "update_timestamp",
                "value": "={{ Date.now() }}"
              }
            ]
          },
          "includePageContent": true,
          "includeMetadata": true
        }
      },
      "id": "a9dbbabb-04de-4c57-a1ba-3944ec655718",
      "name": "Enhanced Default Data Loader2",
      "type": "@n8n/n8n-nodes-langchain.documentDefaultDataLoader",
      "typeVersion": 1,
      "position": [
        3000,
        2200
      ]
    },
    {
      "parameters": {
        "options": {
          "maxItems": 50,
          "batchSize": 10,
          "continueOnFail": true
        }
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        1380,
        2200
      ],
      "id": "cefc02f0-77e3-418b-bc34-bd57ee92bf6c",
      "name": "Loop Over Items1"
    },
    {
      "parameters": {
        "pollTimes": {
          "item": [
            {
              "mode": "everyMinute"
            }
          ]
        },
        "triggerOn": "specificFolder",
        "folderToWatch": {
          "__rl": true,
          "value": "16IACU9rJt4iw-Hvujkm0T1JEkq6q-qsd",
          "mode": "list",
          "cachedResultName": "Gpt",
          "cachedResultUrl": "https://drive.google.com/drive/folders/16IACU9rJt4iw-Hvujkm0T1JEkq6q-qsd"
        },
        "event": "fileCreated",
        "options": {
          "includeFileDetails": true
        }
      },
      "id": "6bc43273-0228-4176-9751-56702caa0ea4",
      "name": "File Created",
      "type": "n8n-nodes-base.googleDriveTrigger",
      "typeVersion": 1,
      "position": [
        80,
        1340
      ],
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "yO30tw4ZXvRYlhaV",
          "name": "Google Drive account 2"
        }
      }
    },
    {
      "parameters": {
        "pollTimes": {
          "item": [
            {
              "mode": "everyMinute"
            }
          ]
        },
        "triggerOn": "specificFolder",
        "folderToWatch": {
          "__rl": true,
          "value": "16IACU9rJt4iw-Hvujkm0T1JEkq6q-qsd",
          "mode": "list",
          "cachedResultName": "Gpt",
          "cachedResultUrl": "https://drive.google.com/drive/folders/16IACU9rJt4iw-Hvujkm0T1JEkq6q-qsd"
        },
        "event": "fileUpdated",
        "options": {
          "includeFileDetails": true
        }
      },
      "id": "ce6e91e5-8680-4617-ba59-fccaf4f4c514",
      "name": "File Updated",
      "type": "n8n-nodes-base.googleDriveTrigger",
      "typeVersion": 1,
      "position": [
        40,
        2200
      ],
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "yO30tw4ZXvRYlhaV",
          "name": "Google Drive account 2"
        }
      }
    },
    {
      "parameters": {
        "mode": "insert",
        "tableName": {
          "__rl": true,
          "value": "documents",
          "mode": "list",
          "cachedResultName": "documents"
        },
        "options": {
          "queryName": "match_documents",
          "filter": {
            "operator": "and",
            "conditions": []
          },
          "similaritySearchOptions": {
            "k": 10,
            "minSimilarity": 0.7,
            "filter": {
              "operator": "and",
              "conditions": []
            }
          }
        }
      },
      "id": "9d058fa5-949d-4042-9a2b-3dd32c8b0938",
      "name": "Insert into Supabase Vectorstore",
      "type": "@n8n/n8n-nodes-langchain.vectorStoreSupabase",
      "typeVersion": 1,
      "position": [
        2780,
        1960
      ],
      "credentials": {
        "supabaseApi": {
          "id": "R9pmCSMoPAm6cxGW",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "operation": "text",
        "options": {
          "encoding": "utf8",
          "formatOutput": true
        }
      },
      "id": "f7ca40ec-a8f3-46e2-a34d-0b1fbde6181e",
      "name": "Extract from Text File",
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        1580,
        1200
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('Set File ID').item.json.file_type }}",
                    "rightValue": "application/pdf",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "PDF"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "fc193b06-363b-4699-a97d-e5a850138b0e",
                    "leftValue": "={{ $('Set File ID').item.json.file_type }}",
                    "rightValue": "application/vnd.google-apps.document",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Text File"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "2ae7faa7-a936-4621-a680-60c512163034",
                    "leftValue": "={{ $('Set File ID').item.json.file_type }}",
                    "rightValue": "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Excel"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "7ddfa924-1c26-4ee3-9890-5c9d2b96717a",
                    "leftValue": "={{ $('Set File ID').item.json.file_type }}",
                    "rightValue": "application/vnd.openxmlformats-officedocument.wordprocessingml.document",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Windows Doc(1)"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "f53caf8b-7a8f-4d1e-98f4-deaf0e0171f0",
                    "leftValue": "={{ $('Set File ID').item.json.file_type }}",
                    "rightValue": "application/msword",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Windows Doc(2)"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "cd9ca627-d00d-4c30-903a-41f603c8e36f",
                    "leftValue": "={{ $('Set File ID').item.json.file_type }}",
                    "rightValue": "application/vnd.ms-word",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Windows Doc(3)"
            }
          ]
        },
        "options": {
          "fallbackOutput": 2,
          "retryOnFail": true,
          "retryTimes": 3
        }
      },
      "id": "811c9c8f-e013-4860-8390-41a36255cb3c",
      "name": "Switch",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        1800,
        2180
      ]
    },
    {
      "parameters": {
        "operation": "text",
        "options": {
          "encoding": "utf8",
          "formatOutput": true
        }
      },
      "id": "7f1ba700-bce7-441b-8289-51d1f1120760",
      "name": "Extract from Text File1",
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        2100,
        2120
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "maxItems": 100,
        "options": {
          "reset": false
        }
      },
      "id": "9b53ecc6-1689-4bd9-ba56-a7b0fb83511d",
      "name": "Limit",
      "type": "n8n-nodes-base.limit",
      "typeVersion": 1,
      "position": [
        760,
        2200
      ]
    },
    {
      "parameters": {
        "options": {},
        "path": "4f242cfd-cdad-45db-b1a1-74fb2731af3d"
      },
      "id": "9a979bf7-1d65-40b7-9f12-45bbd3d45095",
      "name": "When chat message received",
      "type": "@n8n/n8n-nodes-langchain.chatTrigger",
      "typeVersion": 1.1,
      "position": [
        100,
        -180
      ],
      "webhookId": "4f242cfd-cdad-45db-b1a1-74fb2731af3d"
    },
    {
      "parameters": {
        "model": "gpt-4o",
        "options": {
          "temperature": 0.2,
          "maxTokens": 4000,
          "presencePenalty": 0,
          "frequencyPenalty": 0,
          "responseFormat": "text"
        }
      },
      "id": "325d5e95-ed30-4ef5-86b9-19d10556f4a7",
      "name": "OpenAI Chat Model",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1,
      "position": [
        420,
        320
      ],
      "credentials": {
        "openAiApi": {
          "id": "JSPFLNImx8SGH5aT",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $json.message.message_id }}",
        "contextWindowLength": 15
      },
      "id": "98133e00-1444-48fe-b2c6-e8bbaa6dab45",
      "name": "Postgres Chat Memory",
      "type": "@n8n/n8n-nodes-langchain.memoryPostgresChat",
      "typeVersion": 1.1,
      "position": [
        580,
        320
      ],
      "credentials": {
        "postgres": {
          "id": "crRfloEHcMXDoU53",
          "name": "Supabase DB"
        }
      }
    },
    {
      "parameters": {
        "name": "database",
        "description": "retrieves data about projects",
        "topK": 50,
        "searchType": "hybrid",
        "hybridSearch": {
          "keywordWeight": 0.3,
          "vectorWeight": 0.7
        }
      },
      "id": "ad1e7baa-13a5-4374-9ca6-8fc46b3ad11d",
      "name": "Vector Store Tool",
      "type": "@n8n/n8n-nodes-langchain.toolVectorStore",
      "typeVersion": 1,
      "position": [
        740,
        320
      ]
    },
    {
      "parameters": {
        "model": "gpt-4o",
        "options": {
          "temperature": 0.2,
          "maxTokens": 4000,
          "presencePenalty": 0,
          "frequencyPenalty": 0,
          "responseFormat": "text"
        }
      },
      "id": "b6e43916-4a61-41d9-9acc-625e6b4bd953",
      "name": "OpenAI Chat Model1",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1,
      "position": [
        880,
        480
      ],
      "credentials": {
        "openAiApi": {
          "id": "JSPFLNImx8SGH5aT",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "model": "text-embedding-3-large",
        "options": {
          "dimensions": 1536,
          "encodingFormat": "float",
          "batchSize": 100,
          "stripNewLines": true
        }
      },
      "id": "9519e12d-32cd-403e-83b3-80c4ef14cc36",
      "name": "Embeddings OpenAI",
      "type": "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
      "typeVersion": 1.1,
      "position": [
        600,
        620
      ],
      "credentials": {
        "openAiApi": {
          "id": "JSPFLNImx8SGH5aT",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "tableName": {
          "__rl": true,
          "value": "documents",
          "mode": "list",
          "cachedResultName": "documents"
        },
        "options": {
          "queryName": "match_documents",
          "filter": {
            "operator": "and",
            "conditions": []
          },
          "similaritySearchOptions": {
            "k": 10,
            "minSimilarity": 0.7,
            "filter": {
              "operator": "and",
              "conditions": []
            }
          }
        }
      },
      "id": "d6cdd14d-39b9-40e7-863e-1f53da3eb7f4",
      "name": "Supabase Vector Store",
      "type": "@n8n/n8n-nodes-langchain.vectorStoreSupabase",
      "typeVersion": 1,
      "position": [
        600,
        480
      ],
      "credentials": {
        "supabaseApi": {
          "id": "R9pmCSMoPAm6cxGW",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "content": "# RAG AI Agent\n",
        "height": 847.7499999999999,
        "width": 1262.1803336071664
      },
      "id": "57b30f53-d953-464c-8b48-7fb2a1c52ff5",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        0,
        0
      ]
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.text }}",
        "options": {
          "systemMessage": "You are a helpful assistant with expertise in document analysis and information retrieval. You have access to a vector database containing various documents. When responding to queries:\n\n1. Use the vector database to retrieve relevant information\n2. Analyze the retrieved content carefully\n3. Provide comprehensive, accurate responses based on the documents\n4. Cite specific documents when referencing information\n5. If the information is not in the database, clearly state this\n6. Maintain a professional, helpful tone\n7. Format your responses for readability with appropriate headings and structure\n\nYour goal is to provide the most relevant and accurate information from the available documents."
        }
      },
      "id": "6914376e-ac87-48a9-8465-a47fb7c3f927",
      "name": "New RAG Agent",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.7,
      "position": [
        540,
        100
      ]
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('Set File ID1').item.json.file_type }}",
                    "rightValue": "application/pdf",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "PDF"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "fc193b06-363b-4699-a97d-e5a850138b0e",
                    "leftValue": "={{ $('Set File ID1').item.json.file_type }}",
                    "rightValue": "application/vnd.google-apps.document",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Text File"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "2ae7faa7-a936-4621-a680-60c512163034",
                    "leftValue": "={{ $('Set File ID1').item.json.file_type }}",
                    "rightValue": "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Excel"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "7ddfa924-1c26-4ee3-9890-5c9d2b96717a",
                    "leftValue": "={{ $('Set File ID1').item.json.file_type }}",
                    "rightValue": "application/vnd.openxmlformats-officedocument.wordprocessingml.document",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Windows Doc(1)"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "f53caf8b-7a8f-4d1e-98f4-deaf0e0171f0",
                    "leftValue": "={{ $('Set File ID1').item.json.file_type }}",
                    "rightValue": "application/msword",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Windows Doc(2)"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "cd9ca627-d00d-4c30-903a-41f603c8e36f",
                    "leftValue": "={{ $('Set File ID1').item.json.file_type }}",
                    "rightValue": "application/vnd.ms-word",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Windows Doc(3)"
            }
          ]
        },
        "options": {
          "fallbackOutput": 2,
          "retryOnFail": true,
          "retryTimes": 3
        }
      },
      "id": "7cedd86f-68b4-4748-915f-4e1767a8952a",
      "name": "Switch2",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        1000,
        1260
      ]
    },
    {
      "parameters": {
        "modelId": {
          "__rl": true,
          "value": "gpt-4o",
          "mode": "list",
          "cachedResultName": "GPT-4O"
        },
        "messages": {
          "values": [
            {
              "content": "Your goal is to take the incoming version number and add 1 to it. \n\n[Examples]\nInput: v1\nOutput: v2\n\nInput: v2\nOutput: v3\n\nInput: v4\nOutput: v5 \n\nThe output field should always be called \"version\"",
              "role": "system"
            },
            {
              "content": "=incoming version number: {{ $json.metadata.version }}"
            }
          ]
        },
        "jsonOutput": true,
        "options": {
          "temperature": 0,
          "maxTokens": 50
        }
      },
      "id": "d5290b60-75ae-4c68-a2db-ef9d3efa443a",
      "name": "Set Version",
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.7,
      "position": [
        980,
        2200
      ],
      "credentials": {
        "openAiApi": {
          "id": "JSPFLNImx8SGH5aT",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "mode": "insert",
        "tableName": {
          "__rl": true,
          "value": "documents",
          "mode": "list",
          "cachedResultName": "documents"
        },
        "options": {
          "queryName": "match_documents",
          "filter": {
            "operator": "and",
            "conditions": []
          },
          "similaritySearchOptions": {
            "k": 10,
            "minSimilarity": 0.7,
            "filter": {
              "operator": "and",
              "conditions": []
            }
          }
        }
      },
      "id": "9b1d2665-87ea-4c83-b5fc-a09957d2dab6",
      "name": "Insert into Supabase Vectorstore1",
      "type": "@n8n/n8n-nodes-langchain.vectorStoreSupabase",
      "typeVersion": 1,
      "position": [
        2180,
        1060
      ],
      "credentials": {
        "supabaseApi": {
          "id": "R9pmCSMoPAm6cxGW",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "updates": [
          "message",
          "*"
        ],
        "additionalFields": {},
        "path": "1e84cc48-274b-4bc6-a9de-970ec8b65fff"
      },
      "id": "d13e0473-9fac-44b5-85b5-1063ffcefe3a",
      "name": "Telegram Trigger",
      "type": "n8n-nodes-base.telegramTrigger",
      "typeVersion": 1.1,
      "position": [
        -160,
        180
      ],
      "webhookId": "1e84cc48-274b-4bc6-a9de-970ec8b65fff",
      "credentials": {
        "telegramApi": {
          "id": "taWAWzbHJPTWFpC6",
          "name": "Telegram account 2"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "fe7ecc99-e1e8-4a5e-bdd6-6fce9757b234",
              "name": "text",
              "value": "={{ $json.message.text }}",
              "type": "string"
            },
            {
              "id": "47dc4b9a-b722-4749-b0e1-0b3bcbda4779",
              "name": "message.message_id",
              "value": "={{ $json.message.message_id }}",
              "type": "number"
            },
            {
              "id": "44be705f-e101-4330-9458-1c7f0871ac09",
              "name": "message",
              "value": "={{ $json.message }}",
              "type": "object"
            }
          ]
        },
        "options": {}
      },
      "id": "f79e90e1-a069-4e17-8948-001cf0348127",
      "name": "Set 'Text'",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        180,
        280
      ]
    },
    {
      "parameters": {
        "resource": "audio",
        "operation": "transcribe",
        "options": {
          "language": "en",
          "prompt": "This is a conversation about documents and information retrieval",
          "responseFormat": "text"
        }
      },
      "id": "fd9fcb34-9ab1-486e-821e-e51302d86f50",
      "name": "Transcribe",
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.6,
      "position": [
        260,
        100
      ],
      "credentials": {
        "openAiApi": {
          "id": "JSPFLNImx8SGH5aT",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.message.voice.file_id }}",
                    "rightValue": "",
                    "operator": {
                      "type": "string",
                      "operation": "exists",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Voice"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "8c844924-b2ed-48b0-935c-c66a8fd0c778",
                    "leftValue": "={{ $json.message.text }}",
                    "rightValue": "",
                    "operator": {
                      "type": "string",
                      "operation": "exists",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Text"
            }
          ]
        },
        "options": {}
      },
      "id": "c06c4c75-5122-446f-9504-01188e257a85",
      "name": "Switch1",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        0,
        180
      ]
    },
    {
      "parameters": {
        "resource": "file",
        "fileId": "={{ $json.message.voice.file_id }}",
        "path": "c07d9726-ac3e-4afa-8b0b-6ef03d2c7512"
      },
      "id": "9fe20704-d833-4439-a545-8ea34eebc8e9",
      "name": "Download File2",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        140,
        100
      ],
      "webhookId": "c07d9726-ac3e-4afa-8b0b-6ef03d2c7512",
      "credentials": {
        "telegramApi": {
          "id": "taWAWzbHJPTWFpC6",
          "name": "Telegram account 2"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Telegram Trigger').item.json.message.chat.id }}",
        "text": "={{ $json.output }}",
        "additionalFields": {
          "parseMode": "Markdown",
          "disableWebPagePreview": true,
          "disableNotification": false,
          "appendAttribution": false
        },
        "path": "8d9ce549-7dea-48e4-8347-db1f5e77bc35"
      },
      "id": "9a66e002-eaec-4be6-9ba5-736ef99a94ff",
      "name": "Response",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        1040,
        120
      ],
      "webhookId": "8d9ce549-7dea-48e4-8347-db1f5e77bc35",
      "credentials": {
        "telegramApi": {
          "id": "taWAWzbHJPTWFpC6",
          "name": "Telegram account 2"
        }
      }
    },
    {
      "parameters": {
        "functionCode": "// This function processes the query to generate multiple search queries\n// for better retrieval performance\n\nfunction processQuery(items) {\n  // Get the original query\n  const originalQuery = items[0].json.text;\n  \n  // Generate variations of the query for better retrieval\n  const variations = [\n    originalQuery,\n    // Add a more specific version\n    `specific details about ${originalQuery}`,\n    // Add a more general version\n    `summary of ${originalQuery}`,\n    // Add a keyword-focused version\n    originalQuery.split(' ').filter(word => word.length > 3).join(' ')\n  ];\n  \n  // Return the variations as separate items\n  return variations.map(query => ({\n    json: {\n      text: query,\n      original_query: originalQuery,\n      is_variation: query !== originalQuery,\n      message: items[0].json.message\n    }\n  }));\n}",
        "outputMode": "multiple"
      },
      "id": "new-node-1",
      "name": "Query Reformulation",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [
        360,
        100
      ]
    },
    {
      "parameters": {
        "functionCode": "// This function combines and ranks the results from multiple queries\n\nfunction processResults(items) {\n  // Extract all results\n  let allResults = [];\n  const originalQuery = items[0].json.original_query;\n  \n  // Collect all results from different queries\n  items.forEach(item => {\n    if (item.json.output) {\n      allResults.push({\n        output: item.json.output,\n        query: item.json.text,\n        is_variation: item.json.is_variation\n      });\n    }\n  });\n  \n  // If we have results from the original query, prioritize those\n  const originalResults = allResults.find(r => !r.is_variation);\n  \n  // Format the final response\n  let finalOutput = originalResults ? originalResults.output : \n    (allResults.length > 0 ? allResults[0].output : \"No relevant information found.\");\n  \n  // Return the combined result\n  return [{\n    json: {\n      output: finalOutput,\n      original_query: originalQuery\n    }\n  }];\n}",
        "outputMode": "multiple"
      },
      "id": "new-node-2",
      "name": "Result Aggregator",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [
        800,
        100
      ]
    },
    {
      "parameters": {
        "functionCode": "// This function validates the response for accuracy and completeness\n\nfunction validateResponse(items) {\n  const response = items[0].json.output;\n  const originalQuery = items[0].json.original_query;\n  \n  // Check if the response is too short\n  if (response.length < 50) {\n    return [{\n      json: {\n        output: `I apologize, but I couldn't find enough relevant information about \"${originalQuery}\" in the available documents. Please try rephrasing your question or ask about a different topic.`,\n        validation_status: \"insufficient_information\"\n      }\n    }];\n  }\n  \n  // Check if the response contains uncertain language\n  const uncertaintyPhrases = ['not sure', 'might be', 'possibly', 'perhaps', 'unclear'];\n  const hasUncertainty = uncertaintyPhrases.some(phrase => response.toLowerCase().includes(phrase));\n  \n  if (hasUncertainty) {\n    // Add a disclaimer\n    return [{\n      json: {\n        output: response + \"\\n\\nNote: Some details in this response may require verification as they were not explicitly stated in the documents.\",\n        validation_status: \"contains_uncertainty\"\n      }\n    }];\n  }\n  \n  // Response passed validation\n  return [{\n    json: {\n      output: response,\n      validation_status: \"validated\"\n    }\n  }];\n}",
        "outputMode": "multiple"
      },
      "id": "new-node-3",
      "name": "Response Validator",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [
        920,
        100
      ]
    }
  ],
  "connections": {
    "Aggregate1": {
      "main": [
        [
          {
            "node": "Summarize1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract from Excel": {
      "main": [
        [
          {
            "node": "Aggregate1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set File ID": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Delete Old Doc Rows": {
      "main": [
        [
          {
            "node": "Limit",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Download File": {
      "main": [
        [
          {
            "node": "Loop Over Items1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Convert to Google Doc1": {
      "main": [
        [
          {
            "node": "Delete File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [],
        [
          {
            "node": "Delete Old Doc Rows",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set File ID1": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Download File1": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Aggregate": {
      "main": [
        [
          {
            "node": "Summarize",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract from Excel1": {
      "main": [
        [
          {
            "node": "Aggregate",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Convert to Google Doc2": {
      "main": [
        [
          {
            "node": "Delete File1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract PDF Text": {
      "main": [
        [
          {
            "node": "Insert into Supabase Vectorstore1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Summarize1": {
      "main": [
        [
          {
            "node": "Insert into Supabase Vectorstore1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Summarize": {
      "main": [
        [
          {
            "node": "Insert into Supabase Vectorstore",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Recursive Character Text Splitter": {
      "ai_textSplitter": [
        [
          {
            "node": "Enhanced Default Data Loader1",
            "type": "ai_textSplitter",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings OpenAI1": {
      "ai_embedding": [
        [
          {
            "node": "Insert into Supabase Vectorstore1",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "Recursive Character Text Splitter1": {
      "ai_textSplitter": [
        [
          {
            "node": "Enhanced Default Data Loader2",
            "type": "ai_textSplitter",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings OpenAI2": {
      "ai_embedding": [
        [
          {
            "node": "Insert into Supabase Vectorstore",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "Extract PDF Text1": {
      "main": [
        [
          {
            "node": "Insert into Supabase Vectorstore",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items": {
      "main": [
        [
          {
            "node": "Switch2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Download File1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Enhanced Default Data Loader1": {
      "ai_document": [
        [
          {
            "node": "Insert into Supabase Vectorstore1",
            "type": "ai_document",
            "index": 0
          }
        ]
      ]
    },
    "Enhanced Default Data Loader2": {
      "ai_document": [
        [
          {
            "node": "Insert into Supabase Vectorstore",
            "type": "ai_document",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items1": {
      "main": [
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Download File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "File Created": {
      "main": [
        [
          {
            "node": "Set File ID1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "File Updated": {
      "main": [
        [
          {
            "node": "Set File ID",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract from Text File": {
      "main": [
        [
          {
            "node": "Insert into Supabase Vectorstore1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "Extract PDF Text1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Extract from Text File1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Extract from Excel1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Convert to Google Doc2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Convert to Google Doc2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Convert to Google Doc2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract from Text File1": {
      "main": [
        [
          {
            "node": "Insert into Supabase Vectorstore",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Limit": {
      "main": [
        [
          {
            "node": "Set Version",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "When chat message received": {
      "main": [
        [
          {
            "node": "Query Reformulation",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "New RAG Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Postgres Chat Memory": {
      "ai_memory": [
        [
          {
            "node": "New RAG Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Vector Store Tool": {
      "ai_tool": [
        [
          {
            "node": "New RAG Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "Vector Store Tool",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings OpenAI": {
      "ai_embedding": [
        [
          {
            "node": "Supabase Vector Store",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "Supabase Vector Store": {
      "ai_vectorStore": [
        [
          {
            "node": "Vector Store Tool",
            "type": "ai_vectorStore",
            "index": 0
          }
        ]
      ]
    },
    "Switch2": {
      "main": [
        [
          {
            "node": "Extract PDF Text",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Extract from Text File",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Extract from Excel",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Convert to Google Doc1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Convert to Google Doc1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Convert to Google Doc1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Version": {
      "main": [
        [
          {
            "node": "Loop Over Items1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Telegram Trigger": {
      "main": [
        [
          {
            "node": "Switch1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch1": {
      "main": [
        [
          {
            "node": "Download File2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Set 'Text'",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Download File2": {
      "main": [
        [
          {
            "node": "Transcribe",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set 'Text'": {
      "main": [
        [
          {
            "node": "Query Reformulation",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Transcribe": {
      "main": [
        [
          {
            "node": "Query Reformulation",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Response": {
      "main": [
        []
      ]
    },
    "New RAG Agent": {
      "main": [
        [
          {
            "node": "Result Aggregator",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Query Reformulation": {
      "main": [
        [
          {
            "node": "New RAG Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Result Aggregator": {
      "main": [
        [
          {
            "node": "Response Validator",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Response Validator": {
      "main": [
        [
          {
            "node": "Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": {
    "node:File Created": {
      "lastTimeChecked": "2025-02-24T01:52:58Z"
    },
    "node:File Updated": {
      "lastTimeChecked": "2025-02-24T01:52:58Z"
    }
  },
  "pinData": {
    "Telegram Trigger": [
      {
        "json": {
          "update_id": 772857687,
          "message": {
            "message_id": 4,
            "from": {
              "id": 7611790857,
              "is_bot": false,
              "first_name": "hassan",
              "language_code": "en"
            },
            "chat": {
              "id": 7611790857,
              "first_name": "hassan",
              "type": "private"
            },
            "date": 1739423310,
            "text": "give me a detailed summary of the mortgage documents"
          }
        }
      }
    ]
  },
  "triggerCount": 5,
  "meta": {
    "templateCredsSetupCompleted": true
  }
}