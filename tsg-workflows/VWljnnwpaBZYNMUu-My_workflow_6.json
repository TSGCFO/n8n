{
  "name": "My workflow 6",
  "nodes": [
    {
      "parameters": {
        "options": {}
      },
      "id": "0f6183a5-ce87-407f-b29d-73968b160b29",
      "name": "When chat message received",
      "type": "@n8n/n8n-nodes-langchain.chatTrigger",
      "position": [-2520, -100],
      "webhookId": "2da65603-a805-4491-a175-8e89e5223916",
      "typeVersion": 1.1
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $('sessionId-master').item.json.sessionId }}",
        "contextWindowLength": 10
      },
      "id": "763f9cdc-b315-4651-a13e-0882084274e8",
      "name": "Window Buffer Memory",
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "position": [-1520, -440],
      "typeVersion": 1.3
    },
    {
      "parameters": {
        "workflowInputs": {
          "values": [
            {
              "name": "sessionId"
            },
            {
              "name": "chatInput"
            }
          ]
        }
      },
      "id": "c81c68cb-c303-4c43-a276-3de51cceb54d",
      "name": "When Executed by Another Workflow",
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "position": [-2080, -560],
      "typeVersion": 1.1
    },
    {
      "parameters": {},
      "id": "c21cea14-d63b-45b9-809c-4e60e8256925",
      "name": "sessionId-master",
      "type": "n8n-nodes-base.noOp",
      "position": [-1360, -660],
      "typeVersion": 1,
      "executeOnce": false
    },
    {
      "parameters": {
        "descriptionType": "manual",
        "toolDescription": "Consume the Gmail API to get the last emails",
        "operation": "getAll",
        "limit": "={{ $fromAI(\"limit\", \"The maximal number of mails to receive.\", \"number\") }}",
        "filters": {
          "q": "in:inbox"
        }
      },
      "id": "408abd2b-1559-4ecf-9b82-c7c3811d33eb",
      "name": "Get last emails",
      "type": "n8n-nodes-base.gmailTool",
      "position": [-1700, 0],
      "webhookId": "337cc370-cea4-4c29-bf30-2437e5d7609e",
      "typeVersion": 2.1,
      "credentials": {
        "gmailOAuth2": {
          "id": "ZAFsFqgWW2cFvudP",
          "name": "Gmail account"
        }
      }
    },
    {
      "parameters": {
        "descriptionType": "manual",
        "toolDescription": "Consume Google Calendar API to receive a list of calendar events between \"start\" and \"end\". Make sure to pass datetime.",
        "operation": "getAll",
        "calendar": {
          "__rl": true,
          "mode": "list",
          "value": "XXXX@gmail.com",
          "cachedResultName": "XXXX@gmail.com"
        },
        "limit": "={{ $fromAI('limit','the amount of event',\"number\") }}",
        "timeMin": "={{ $fromAI('start','start date in format \"2017-07-01T13:00:00+02:00\"') }}",
        "timeMax": "={{ $fromAI('end','end date in format \"2017-07-01T13:00:00+02:00\"') }}",
        "options": {}
      },
      "id": "b3e6397e-4066-4a12-85b3-4b736d26ab6c",
      "name": "Get calendar events",
      "type": "n8n-nodes-base.googleCalendarTool",
      "position": [-1020, 180],
      "typeVersion": 1.3,
      "credentials": {
        "googleCalendarOAuth2Api": {
          "id": "dKBUhZMJJa9FRBr6",
          "name": "Google Calendar account"
        }
      }
    },
    {
      "parameters": {
        "content": "## Email Sorting Agent\n",
        "height": 720,
        "width": 1500
      },
      "id": "cd9651f2-a4ed-42b2-86b6-3c9ec26176b9",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "position": [-2640, -1980],
      "typeVersion": 1
    },
    {
      "parameters": {},
      "id": "bc7b835c-c171-4f31-962f-0180c08dca33",
      "name": "When clicking ‘Test workflow’",
      "type": "n8n-nodes-base.manualTrigger",
      "position": [-2480, -2140],
      "typeVersion": 1
    },
    {
      "parameters": {
        "resource": "thread",
        "operation": "get",
        "threadId": "={{ $json.id }}",
        "options": {}
      },
      "id": "42152505-7399-4bac-9abd-fd06e69c6d81",
      "name": "Gmail1",
      "type": "n8n-nodes-base.gmail",
      "position": [-1800, -2180],
      "webhookId": "3da4a75a-ee55-483e-b5e0-24f34d4db217",
      "typeVersion": 2.1,
      "credentials": {
        "gmailOAuth2": {
          "id": "ZAFsFqgWW2cFvudP",
          "name": "Gmail account"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "4b9f38c0-f1f8-42fc-b779-1e138f72b239",
      "name": "Embeddings OpenAI",
      "type": "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
      "position": [-1360, -1960],
      "typeVersion": 1.2,
      "credentials": {
        "openAiApi": {
          "id": "JSPFLNImx8SGH5aT",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "jsonMode": "expressionData",
        "jsonData": "={{ $json.emailSummary }}",
        "options": {
          "metadata": {
            "metadataValues": [
              {
                "name": "threadId",
                "value": "={{ $json.id }}"
              }
            ]
          }
        }
      },
      "id": "b5dcd555-7ae1-4b53-90a5-ad6db96ce69e",
      "name": "Default Data Loader",
      "type": "@n8n/n8n-nodes-langchain.documentDefaultDataLoader",
      "position": [-1240, -1960],
      "typeVersion": 1
    },
    {
      "parameters": {
        "chunkSize": 2000
      },
      "id": "3712e6e5-1caf-44e5-b822-42ecd00f997d",
      "name": "Token Splitter",
      "type": "@n8n/n8n-nodes-langchain.textSplitterTokenSplitter",
      "position": [-1160, -1760],
      "typeVersion": 1
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "const result = {}\n\nfunction summarizeConversation(messages) {\n  return messages.map(msg => {\n    const date = new Date(Number(msg.internalDate)).toISOString();\n    return `\n\n📅 ${date}\n📨 From: ${msg.From}\n📥 To: ${msg.To}\n📌 Subject: ${msg.Subject}\n\n${msg.snippet}\n`.trim();\n  }).join(\"\\n\\n-----------------------\\n\\n\");\n}\n\n$json.emailSummary = summarizeConversation($json.messages);\n\nreturn $json;"
      },
      "id": "e21e358b-25a5-4e9c-8167-75171b7f51a3",
      "name": "Code - Summarize Email Thread as Text",
      "type": "n8n-nodes-base.code",
      "position": [-1580, -2180],
      "typeVersion": 2
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "e2242950-e780-48fc-87eb-886ad27c13a3",
      "name": "Embeddings OpenAI1",
      "type": "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
      "position": [-460, -20],
      "typeVersion": 1.2,
      "credentials": {
        "openAiApi": {
          "id": "JSPFLNImx8SGH5aT",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "o3",
          "mode": "list",
          "cachedResultName": "o3"
        },
        "options": {}
      },
      "id": "f50cc8c1-b4e1-4194-9d4a-403a149fd3b0",
      "name": "OpenAI Chat Model1",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "position": [-260, -240],
      "typeVersion": 1.2,
      "credentials": {
        "openAiApi": {
          "id": "JSPFLNImx8SGH5aT",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "descriptionType": "manual",
        "toolDescription": "Call the Gmail API to delete an email. Always request the email message id before calling this tool.",
        "operation": "delete",
        "messageId": "={{ $fromAI('Message_ID', ``, 'string') }}"
      },
      "id": "a8dc0236-d527-44ea-9360-97a07bdee873",
      "name": "Delete an email",
      "type": "n8n-nodes-base.gmailTool",
      "position": [-1860, -20],
      "webhookId": "0cfb9fbe-ec02-4ab3-87ac-ab949efdfe50",
      "typeVersion": 2.1,
      "credentials": {
        "gmailOAuth2": {
          "id": "ZAFsFqgWW2cFvudP",
          "name": "Gmail account"
        }
      }
    },
    {
      "parameters": {
        "descriptionType": "manual",
        "toolDescription": "Call Gmail API to create a Draft message as Reply To an existing email or email thread. Pass the correct Thread-Id of the message. To get the Thread ID call the Get Email Tool before.",
        "resource": "draft",
        "subject": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Subject', ``, 'string') }}",
        "message": "={{ $fromAI('Message', `The Text that should be send in reply`, 'string') }}",
        "options": {
          "threadId": "={{ $fromAI('thread-ID', `The ID of the thread. Need to be received from the Email Tool Response. Use the exact ID and better call the Get Email Tool again`, 'string') }}",
          "sendTo": "={{ $fromAI('To_Email', `The email adress of the sender`, 'string') }}"
        }
      },
      "id": "9a9427a3-baf3-492e-a258-3f3a8266567a",
      "name": "Create an Email Draft as response to a thread",
      "type": "n8n-nodes-base.gmailTool",
      "position": [-1600, 200],
      "webhookId": "471a112a-9787-4fa1-b681-8b69395d631a",
      "typeVersion": 2.1,
      "credentials": {
        "gmailOAuth2": {
          "id": "ZAFsFqgWW2cFvudP",
          "name": "Gmail account"
        }
      }
    },
    {
      "parameters": {
        "descriptionType": "manual",
        "toolDescription": "Call Gmail API to create a New outgoing Draft message.",
        "resource": "draft",
        "subject": "={{ $fromAI('Subject', ``, 'string') }}",
        "message": "={{ $fromAI('Message', `The Text that should be send in reply`, 'string') }}",
        "options": {
          "sendTo": "={{ $fromAI('To_Email', `The email adress of the sender`, 'string') }}"
        }
      },
      "id": "f052635e-02c5-4eae-a8a2-b22418dba70e",
      "name": "Create an New Email Draft",
      "type": "n8n-nodes-base.gmailTool",
      "position": [-1520, -40],
      "webhookId": "0321c8e3-b0c1-44ff-9e8b-671db71e3f51",
      "typeVersion": 2.1,
      "credentials": {
        "gmailOAuth2": {
          "id": "ZAFsFqgWW2cFvudP",
          "name": "Gmail account"
        }
      }
    },
    {
      "parameters": {
        "content": "## Email Access Tools",
        "height": 540,
        "width": 620
      },
      "id": "a1ad91d5-d6c3-42ca-8530-7cfac53e8b23",
      "name": "Sticky Note1",
      "type": "n8n-nodes-base.stickyNote",
      "position": [-1920, -100],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## Calender Access Tools",
        "height": 460,
        "width": 520,
        "color": 6
      },
      "id": "ef16af47-6d28-4df9-b086-adec6bd32ace",
      "name": "Sticky Note2",
      "type": "n8n-nodes-base.stickyNote",
      "position": [-1240, -80],
      "typeVersion": 1
    },
    {
      "parameters": {
        "descriptionType": "manual",
        "toolDescription": "Consume Google Calendar API to add a new event or meeting to the calender",
        "calendar": {
          "__rl": true,
          "mode": "list",
          "value": "XXXX@gmail.com",
          "cachedResultName": "XXXX@gmail.com"
        },
        "start": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Start', ``, 'string') }}",
        "end": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('End', ``, 'string') }}",
        "additionalFields": {
          "description": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Description', ``, 'string') }}",
          "summary": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Summary', ``, 'string') }}"
        }
      },
      "id": "ec0c1f0d-0b4e-459c-b9e4-4016861b87a1",
      "name": "Add an calender entry",
      "type": "n8n-nodes-base.googleCalendarTool",
      "position": [-1140, 60],
      "typeVersion": 1.3,
      "credentials": {
        "googleCalendarOAuth2Api": {
          "id": "dKBUhZMJJa9FRBr6",
          "name": "Google Calendar account"
        }
      }
    },
    {
      "parameters": {
        "content": "## Knowlede about past email conversations",
        "height": 620,
        "width": 520,
        "color": 5
      },
      "id": "be77f54d-6bb8-4d5f-a9b6-5d400b0b2168",
      "name": "Sticky Note3",
      "type": "n8n-nodes-base.stickyNote",
      "position": [-620, -520],
      "typeVersion": 1
    },
    {
      "parameters": {
        "pollTimes": {
          "item": [
            {
              "mode": "everyMinute"
            }
          ]
        },
        "filters": {}
      },
      "id": "69834eee-70f3-427e-b21a-250fdbe64381",
      "name": "Gmail Trigger",
      "type": "n8n-nodes-base.gmailTrigger",
      "position": [-2440, -1880],
      "typeVersion": 1.2,
      "credentials": {
        "gmailOAuth2": {
          "id": "ZAFsFqgWW2cFvudP",
          "name": "Gmail account"
        }
      }
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "o3",
          "mode": "list",
          "cachedResultName": "o3"
        },
        "options": {}
      },
      "id": "7627e6ac-7653-4ac3-9249-419e34a2d604",
      "name": "OpenAI Chat Model2",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "position": [-2080, -1560],
      "typeVersion": 1.2,
      "credentials": {
        "openAiApi": {
          "id": "JSPFLNImx8SGH5aT",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "content": "## Email Thread Knowledge adder",
        "height": 780,
        "width": 1680,
        "color": 4
      },
      "id": "b2e0978a-4276-437f-844a-bd349e59f9b5",
      "name": "Sticky Note4",
      "type": "n8n-nodes-base.stickyNote",
      "position": [-2600, -2200],
      "typeVersion": 1
    },
    {
      "parameters": {
        "descriptionType": "manual",
        "toolDescription": "Consume the Gmail API to receive an email by message-id",
        "operation": "get",
        "messageId": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Message_ID', ``, 'string') }}"
      },
      "id": "4942eadf-06d8-4384-85a9-5f53702d05f0",
      "name": "Get an email by MessageID",
      "type": "n8n-nodes-base.gmailTool",
      "position": [-1860, 180],
      "webhookId": "2f916427-b445-4c08-841f-bd13b5f99c85",
      "typeVersion": 2.1,
      "credentials": {
        "gmailOAuth2": {
          "id": "ZAFsFqgWW2cFvudP",
          "name": "Gmail account"
        }
      }
    },
    {
      "parameters": {
        "description": "Search previous email conversations for context and information. Use this tool to find relevant past conversations when processing emails. Include specific details like email addresses, subjects, keywords, or classification categories in your search query for better results. Always mention the email addresses of the people involved for optimal retrieval.",
        "topK": 15
      },
      "id": "b74b2750-270b-446c-9157-48e345e6bd93",
      "name": "Research context and infos in previous conversations",
      "type": "@n8n/n8n-nodes-langchain.toolVectorStore",
      "position": [-440, -440],
      "typeVersion": 1.1
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.chatInput }}",
        "options": {
          "systemMessage": "=# AI Assistant Prompt – Inbox & Calendar\n\n## Role  \nYou are my personal AI assistant for email and calendar management.  \nI am Hassan Sadiq.  \nYou support me in organizing my Gmail inbox, keeping track of important topics, handling emails, and managing appointments efficiently.  \nYou provide suggestions and analyses, and act autonomously when retrieving information using the available tools.\n\n---\n\n## Scope  \nYou analyze emails and calendar data, identify relevant information, prioritize, and assist in processing.  \nYou can access email content, draft responses, suggest calendar entries, and identify available time slots – based on the tools provided. Use the tools proactively.\n\n> Today is `{{ $now }}` in timezone +2.  \n> The user is in timezone +2.\n\n---\n\n## Command\n\n- Regularly provide an overview of current and prioritized emails.  \n- Detect requests, invitations, or to-dos in emails and suggest appropriate actions or scheduling.  \n- Propose meaningful draft replies suitable to the context.  \n- Monitor the calendar for upcoming appointments, conflicts, or free time slots.  \n- Suggest daily or weekly structures based on calendar availability.  \n- Support planning and coordination directly from the context of emails.  \n- When suggesting appointments, always check availability in the calendar.  \n- Note that calendar timestamps are in UTC and must be converted before evaluation and display.  \n- When handling emails and using the corresponding tools, remember the `MessageID` so it can be passed to other tools.  \n  Always show the `MessageID` to the user so it remains accessible in your conversation history.\n\n---\n\n## Format\n\n- Clear, structured presentation of suggestions (e.g., lists, tables, bullet points).  \n- Draft replies must always be **friendly and professional** – respectful, clear, without unnecessary phrasing.  \n- Calendar and time suggestions must be easy to read (e.g., “next Tuesday at 2:00 PM”).\n\n---\n\n## Constraints\n\n- Only send emails or create appointments after confirmation from the user.  \n- Always act in the spirit of **relief, clarity, and efficiency**.\n"
        }
      },
      "id": "1477693c-89ca-4690-ab2b-7f044c3f8bcd",
      "name": "EMail Agent",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "position": [-1120, -660],
      "typeVersion": 1.7
    },
    {
      "parameters": {
        "inputText": "=Email Subject: {{ $json.Subject }}\n\nEMail From: {{ $json.From }}\n\n------\n##Email Snippet: \n{{ $json.snippet }}\n\n",
        "categories": {
          "categories": [
            {
              "category": "Khadija",
              "description": "Any email where the sender is khadija0308@hotmail.com"
            },
            {
              "category": "Custody Case",
              "description": "Every email from someone at Frodis Family Law, especially from Dani Frodis and Dahlia Windman|Also, emails that sound like they are related to the case from Family court between Hassan Sadiq and Khadija Rabbani"
            }
          ]
        },
        "options": {
          "fallback": "other"
        }
      },
      "id": "704e1dee-002a-48a3-8349-89a094e541ef",
      "name": "Classify Emails",
      "type": "@n8n/n8n-nodes-langchain.textClassifier",
      "position": [-2160, -1820],
      "typeVersion": 1,
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "mode": "insert",
        "tableName": "email_vectors",
        "options": {
          "columnNames": {
            "values": {
              "contentColumnName": "content"
            }
          }
        }
      },
      "id": "c2e2336b-1f32-49f6-9c7a-8e46d753c06f",
      "name": "Write - Threads History Vector Store",
      "type": "@n8n/n8n-nodes-langchain.vectorStorePGVector",
      "position": [-2240, -2440],
      "typeVersion": 1.3
    },
    {
      "parameters": {
        "mode": "load",
        "tableName": "email_vectors",
        "topK": 15,
        "options": {
          "columnNames": {
            "values": {
              "contentColumnName": "content"
            }
          }
        }
      },
      "id": "84fdadf8-d5ae-4926-9f19-b06a16e6da60",
      "name": "Read- Threads History Vector Store",
      "type": "@n8n/n8n-nodes-langchain.vectorStorePGVector",
      "position": [-2540, -1700],
      "typeVersion": 1.3
    },
    {
      "parameters": {
        "tableName": "email_vectors",
        "options": {}
      },
      "id": "d64b6315-5318-4b60-b6a2-bc4f3d3c1cc8",
      "name": "Threads History Vector Store",
      "type": "@n8n/n8n-nodes-langchain.vectorStorePGVector",
      "position": [-540, -240],
      "typeVersion": 1.3,
      "credentials": {
        "postgres": {
          "id": "sQRTdjtVLqSJVoaT",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "content": "## Main Inbox Assistance Agent\n\n### Before Using\n** Modify the classifier agent for your needs. Add the Labels in GMail before, if you want to assign labels.\n** Add proper credentials\n** Modify the Prompts (e.g. give more context about your role and company)\n\n### More on professional Agents:\n** From [AOE AI Lab](https://ai-radar.aoe.com/)",
        "height": 440,
        "width": 480,
        "color": 3
      },
      "id": "499f5a97-cac3-42f1-8a77-1c6a64a51501",
      "name": "Sticky Note7",
      "type": "n8n-nodes-base.stickyNote",
      "position": [-2920, -1280],
      "typeVersion": 1
    },
    {
      "parameters": {
        "descriptionType": "manual",
        "toolDescription": "Formats the date in the name of the day of the week. Always use this before you output weekdays.",
        "operation": "formatDate",
        "date": "={{ $fromAI('Date', ``, 'string') }}",
        "format": "custom",
        "customFormat": "EEEE dd MM ",
        "outputFieldName": "=formattedDate",
        "options": {}
      },
      "id": "305bb9e4-00ac-4a2f-a340-b6fd53b6dfe4",
      "name": "Determine the name of the day of the week",
      "type": "n8n-nodes-base.dateTimeTool",
      "position": [-840, 40],
      "typeVersion": 2
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "claude-opus-4-20250514",
          "mode": "list",
          "cachedResultName": "Claude Opus 4"
        },
        "options": {
          "thinking": true
        }
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatAnthropic",
      "typeVersion": 1.3,
      "position": [-1640, -440],
      "id": "e0dba9d0-7eb7-4816-a954-4d1ae42088ba",
      "name": "Anthropic Chat Model",
      "credentials": {
        "anthropicApi": {
          "id": "y2a5bBpZYLP41Q8y",
          "name": "Anthropic account"
        }
      }
    },
    {
      "parameters": {
        "resource": "thread",
        "limit": 10,
        "filters": {}
      },
      "id": "e4dbb500-82a7-4b96-b3d1-2e8a7229233f",
      "name": "Gmail - get recent Threads1",
      "type": "n8n-nodes-base.gmail",
      "position": [-2080, -2180],
      "webhookId": "5c988c0a-67f8-4d16-9525-518bf9049c90",
      "typeVersion": 2.1,
      "credentials": {
        "gmailOAuth2": {
          "id": "ZAFsFqgWW2cFvudP",
          "name": "Gmail account"
        }
      }
    },
    {
      "parameters": {
        "updates": ["message"],
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.telegramTrigger",
      "typeVersion": 1.2,
      "position": [-2480, -740],
      "id": "8213f2e0-2e24-41a6-b5af-373f60cb07c9",
      "name": "Telegram Trigger",
      "webhookId": "2f57f7b4-297a-4636-898e-dc9bcaa017bb",
      "credentials": {
        "telegramApi": {
          "id": "fWSypFy5utgBgI0X",
          "name": "Telegram account 3"
        }
      }
    },
    {
      "parameters": {
        "mode": "raw",
        "jsonOutput": "={\n  \"sessionId\": \"{{ $json.message.chat.id }}\",\n  \"action\": \"sendMessage\",\n  \"chatInput\": {{ [ $json.message.text ?? '', $json.text ?? '' ] }}\n}\n",
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [-1720, -780],
      "id": "749dea6f-8ec8-4481-9610-97eb64e24684",
      "name": "Pass parameters"
    },
    {
      "parameters": {
        "chatId": "={{ $('sessionId-master').item.json.sessionId }}",
        "text": "={{ $json.output }}",
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [-60, -660],
      "id": "be63e203-bf92-40ba-899a-6d9d91860eb2",
      "name": "Send a text message",
      "webhookId": "3e9e1de3-3725-42fb-b94e-dfe84dca37b7",
      "alwaysOutputData": true,
      "credentials": {
        "telegramApi": {
          "id": "fWSypFy5utgBgI0X",
          "name": "Telegram account 3"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "f7155fa3-a156-4fa6-b1e4-00dd997ce096",
              "leftValue": "={{$json[\"message\"][\"voice\"]}}",
              "rightValue": "",
              "operator": {
                "type": "object",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [-2260, -740],
      "id": "b0463c88-7567-4975-9c69-dbf1b3a72f9b",
      "name": "If"
    },
    {
      "parameters": {
        "resource": "file",
        "fileId": "={{ $json.message.voice.file_id }}"
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [-2020, -960],
      "id": "e82a8cd7-ea79-4bc9-b747-751f6b8dc5e1",
      "name": "Get a file",
      "webhookId": "837a3ccd-7f1d-45fa-881c-977cde2bd4ce",
      "credentials": {
        "telegramApi": {
          "id": "fWSypFy5utgBgI0X",
          "name": "Telegram account 3"
        }
      }
    },
    {
      "parameters": {
        "resource": "audio",
        "operation": "transcribe",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [-1860, -1160],
      "id": "99b20103-9eb5-4f49-bc85-03ef190340ae",
      "name": "Transcribe a recording",
      "credentials": {
        "openAiApi": {
          "id": "JSPFLNImx8SGH5aT",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "mode": "raw",
        "jsonOutput": "={\n  \"sessionId\": \"{{ $('Telegram Trigger').item.json.message.chat.id }}\",\n  \"action\": \"sendMessage\",\n  \"chatInput\": \"{{ $json.text }}\"\n}\n",
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [-1600, -980],
      "id": "d37d1bcd-488a-4eae-9711-7a0a89d653bb",
      "name": "Pass parameters1"
    },
    {
      "parameters": {
        "operation": "addLabels",
        "messageId": "={{ $json.id }}",
        "labelIds": ["Label_1930811300236635888"]
      },
      "id": "cc3700af-936f-457f-9728-b838c125d15a",
      "name": "Gmail - Label as Important",
      "type": "n8n-nodes-base.gmail",
      "position": [-1800, -1900],
      "webhookId": "3e488d4d-5528-48c7-b363-1391368efd8e",
      "typeVersion": 2.1,
      "credentials": {
        "gmailOAuth2": {
          "id": "ZAFsFqgWW2cFvudP",
          "name": "Gmail account"
        }
      }
    },
    {
      "parameters": {
        "operation": "addLabels",
        "messageId": "={{ $json.id }}",
        "labelIds": ["Label_2164328482558744523"]
      },
      "id": "e4365d98-8372-4cc8-98f0-cc2bbbdf0542",
      "name": "Gmail label as Custody Case",
      "type": "n8n-nodes-base.gmail",
      "position": [-1800, -1700],
      "webhookId": "13291755-e6d5-435e-8601-b20b5ed7e866",
      "typeVersion": 2.1,
      "credentials": {
        "gmailOAuth2": {
          "id": "ZAFsFqgWW2cFvudP",
          "name": "Gmail account"
        }
      }
    },
    {
      "parameters": {
        "mode": "insert",
        "tableName": "email_vectors",
        "options": {
          "columnNames": {
            "values": {
              "contentColumnName": "content"
            }
          }
        }
      },
      "id": "2d1a8048-665d-4ae1-98f7-65dee36bba99",
      "name": "Write - Threads History Vector Store1",
      "type": "@n8n/n8n-nodes-langchain.vectorStorePGVector",
      "position": [-1900, -2420],
      "typeVersion": 1.3,
      "disabled": true
    },
    {
      "parameters": {
        "mode": "load",
        "tableName": "email_vectors",
        "topK": 15,
        "options": {
          "columnNames": {
            "values": {
              "contentColumnName": "content"
            }
          }
        }
      },
      "id": "13258c09-f001-4070-95d2-34fb641a2d4e",
      "name": "Read- Threads History Vector Store1",
      "type": "@n8n/n8n-nodes-langchain.vectorStorePGVector",
      "position": [-2880, -1560],
      "typeVersion": 1.3,
      "disabled": true
    },
    {
      "parameters": {
        "mode": "load",
        "tableName": "email_vectors",
        "topK": 15,
        "options": {
          "columnNames": {
            "values": {
              "contentColumnName": "content"
            }
          }
        }
      },
      "type": "@n8n/n8n-nodes-langchain.vectorStorePGVector",
      "typeVersion": 1.3,
      "position": [-2420, -1460],
      "id": "8bd4c745-3215-4351-99d3-2901d78b63a3",
      "name": "Postgres PGVector Store1"
    },
    {
      "parameters": {
        "mode": "insert",
        "tableName": "email_vectors",
        "options": {
          "columnNames": {
            "values": {
              "contentColumnName": "content"
            }
          }
        }
      },
      "type": "@n8n/n8n-nodes-langchain.vectorStorePGVector",
      "typeVersion": 1.3,
      "position": [-1300, -2160],
      "id": "2101ca00-ff1e-44f7-8873-0ef2a7444a62",
      "name": "Write - Threads History Vector Store2"
    }
  ],
  "connections": {
    "Gmail1": {
      "main": [
        [
          {
            "node": "Code - Summarize Email Thread as Text",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "EMail Agent": {
      "main": [
        [
          {
            "node": "Send a text message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Gmail Trigger": {
      "main": [
        [
          {
            "node": "Classify Emails",
            "type": "main",
            "index": 0
          },
          {
            "node": "Gmail - get recent Threads1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Token Splitter": {
      "ai_textSplitter": [
        [
          {
            "node": "Default Data Loader",
            "type": "ai_textSplitter",
            "index": 0
          }
        ]
      ]
    },
    "Classify Emails": {
      "main": [
        [
          {
            "node": "Gmail - Label as Important",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Gmail label as Custody Case",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Delete an email": {
      "ai_tool": [
        [
          {
            "node": "EMail Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Get last emails": {
      "ai_tool": [
        [
          {
            "node": "EMail Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "sessionId-master": {
      "main": [
        [
          {
            "node": "EMail Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings OpenAI": {
      "ai_embedding": [
        [
          {
            "node": "Read- Threads History Vector Store",
            "type": "ai_embedding",
            "index": 0
          },
          {
            "node": "Write - Threads History Vector Store2",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings OpenAI1": {
      "ai_embedding": [
        [
          {
            "node": "Threads History Vector Store",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "Research context and infos in previous conversations",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model2": {
      "ai_languageModel": [
        [
          {
            "node": "Classify Emails",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Default Data Loader": {
      "ai_document": [
        [
          {
            "node": "Write - Threads History Vector Store2",
            "type": "ai_document",
            "index": 0
          }
        ]
      ]
    },
    "Get calendar events": {
      "ai_tool": [
        [
          {
            "node": "EMail Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Window Buffer Memory": {
      "ai_memory": [
        [
          {
            "node": "EMail Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Add an calender entry": {
      "ai_tool": [
        [
          {
            "node": "EMail Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Create an New Email Draft": {
      "ai_tool": [
        [
          {
            "node": "EMail Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Get an email by MessageID": {
      "ai_tool": [
        [
          {
            "node": "EMail Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "When Executed by Another Workflow": {
      "main": [
        [
          {
            "node": "sessionId-master",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "When clicking ‘Test workflow’": {
      "main": [
        [
          {
            "node": "Gmail - get recent Threads1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code - Summarize Email Thread as Text": {
      "main": [
        [
          {
            "node": "Write - Threads History Vector Store2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Determine the name of the day of the week": {
      "ai_tool": [
        [
          {
            "node": "EMail Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Create an Email Draft as response to a thread": {
      "ai_tool": [
        [
          {
            "node": "EMail Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Research context and infos in previous conversations": {
      "ai_tool": [
        [
          {
            "node": "EMail Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Anthropic Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "EMail Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Gmail - get recent Threads1": {
      "main": [
        [
          {
            "node": "Gmail1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Telegram Trigger": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Pass parameters": {
      "main": [
        [
          {
            "node": "sessionId-master",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "Get a file",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Pass parameters",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get a file": {
      "main": [
        [
          {
            "node": "Transcribe a recording",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Transcribe a recording": {
      "main": [
        [
          {
            "node": "Pass parameters1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Pass parameters1": {
      "main": [
        [
          {
            "node": "sessionId-master",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Threads History Vector Store": {
      "ai_vectorStore": [
        [
          {
            "node": "Research context and infos in previous conversations",
            "type": "ai_vectorStore",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "pinData": {
    "When chat message received": [
      {
        "json": {
          "sessionId": "595545ced2ec4d53b525f894a9e733ee",
          "action": "sendMessage",
          "chatInput": "get my latest email "
        }
      }
    ]
  },
  "triggerCount": 0,
  "meta": {
    "templateCredsSetupCompleted": true
  }
}
